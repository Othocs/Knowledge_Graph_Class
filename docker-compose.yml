version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: tp2-postgres
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shop
    ports:
      - "5432:5432"
    volumes:
      - ./TP_2/postgres/init:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d shop"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tp2-network

  neo4j:
    image: neo4j:5.20
    container_name: tp2-neo4j
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*,gds.*
      NEO4J_server_memory_heap_max__size: 2G
      NEO4J_server_memory_heap_initial__size: 1G
      NEO4J_server_memory_pagecache_size: 512M
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/import:/var/lib/neo4j/import
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - tp2-network

  app:
    image: ghcr.io/astral-sh/uv:python3.11-bookworm-slim
    container_name: tp2-app
    working_dir: /work
    command: bash /work/app/start.sh
    ports:
      - "8000:8000"
    volumes:
      - ./app:/work/app
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: app
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shop
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: password
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    networks:
      - tp2-network

volumes:
  postgres_data:
  neo4j_logs:

networks:
  tp2-network:
    driver: bridge
